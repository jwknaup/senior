% Ancortek Matlab API Explained
% Description: This is an example of how to use the Matlab interface.
% For any question, please contact at info@ancortek.com

% Note: ANCORTEK Inc fully supports any research work using
% SDR-KITs and provides MATLAB GUI and source codes upon request.
% The MATLAB GUI and MATLAB source codes are provided "as is", 
% with no guarantee whatsoever, and for non-commercial use only.  
% The ANCORTEK Inc will not be liable for any damage caused.

% Functions needed in the Matlab path: 
% usbcheckchip.mexw64
% usbsetinterface1.mexw64
% usbfindendpoint.mexw64
% usbdownload.mexw64
% SDR_USB_FW.hex
% miniradargetdata.mexw64
% miniradarputdata.mexw64

%% USB device initialization
[device_coun, vID, pID] = usbcheckchip;
interface_no = usbsetinterface1;
handles.endpoint2_no = usbfindendpoint(2);
handles.endpoint6_no = usbfindendpoint(134);
fid = fopen('SDR_USB_FW.hex');
i=0;
while 1
    tline = fgetl(fid);
    if tline == -1
        disp('Hex file read error');
        return
    end
    if tline(2:3) == '00'
        break
    end
    i = i+1;
    codedata{i,1} = int64(hex2dec(tline(2:3)));
    codedata{i,2} = uint16(hex2dec(tline(4:7)));
    bincode = uint8([]);
    for j = 10:2:(size(tline,2)-2)
        bincode((j-8)/2) = uint8(hex2dec(tline(j:(j+1))));
    end
    codedata{i,3} = bincode;
end
fclose(fid);
linesdone = usbdownload(codedata);

%% Send radar parameters to the device
% MD (waveform): 
% fmcw_sawtooth: MD = 0;
% fmcw_triangle: MD = 1;
% fsk: MD = 2;
% cw: MD = 3

% SN (sampling number): 
% 128 samples/sweep: SN = 0;
% 256: SN = 1;
% 512: SN = 2;
% 1024: SN = 3;

% BW (bandwidth): (except for 24GHz products)
% 400 MHz: BW = 0;
% 100 MHz: BW = 1;
% 150 MHz: BW = 2;
% 300 MHz: BW = 3;

% For 24GHz products:
% 2000 MHz: BW = 0;
% 500 MHz: BW = 1;
% 750 MHz: BW = 2;
% 1500 MHz: BW = 3;

% ST (sweep time) for B series:
% 0.5ms: ST = 0;
% 1ms: ST = 1;
% 4ms: ST = 2;
% 10ms: ST = 3;

% ST (sweep time) in AD series:
% 1ms: ST = 0;
% 2ms: ST = 1;
% 4ms: ST = 2;
% 10ms: ST = 3;

% example: fmcw, 128 samples/sweep, 400MHz, 0.5ms sweep duration in B series
% or fmcw, 128 samples/sweep, 400MHz, 1ms sweep duration in AD series
% or fmcw, 128 samples/sweep, 2000MHz, 1ms sweep duration in 2400AD2
MD = 0; SN = 2; BW = 0; ST = 0;
%SN=0 => sweep length = 128
instruction = MD+SN*4+BW*16+ST*64+40960;
forwarddata = zeros(512,1)+instruction;
outdata = uint16(forwarddata);

% send instruction to the radar
outlength = miniradarputdata(outdata, handles.endpoint2_no);

%% Request data from the device
% 128 samples/sweep
NTS = 512; 

% number of pulses to request; for 0.5ms sweep duration, 10000 pulses -> 5s of data
NP = 50; 

% I&Q, so multiply by 2; 
% Request extra 2048 samples everytime and discard them.
% They are leftover in the internal buffer.
data_length = NTS * NP * 2 + 2048;  

% for AD2, dual-receiving channel models:
% data_length = NTS * NP * 2 * 2 + 2048;
                                    
% request data from the device
% [data,inlength] = miniradargetdata(handles.endpoint6_no,data_length);
% 
% % raw I and Q data
% % format: I,Q,I,Q,...
% % rawdata = double(data(2049:end));   
% % I_rawdata = rawdata(1:2:end);
% % Q_rawdata = rawdata(2:2:end);
% 
% % for AD2, dual-receiving channel models:
% rawdata = double(data(2049:end));   
% I_rawdata_1 = rawdata(2:4:end); % I data from channel 1
% Q_rawdata_1 = rawdata(1:4:end); % Q data from channel 1
% I_rawdata_2 = rawdata(4:4:end); % I data from channel 2
% Q_rawdata_2 = rawdata(3:4:end); % Q data from channel 2
% 
% 
% % in order to identify the start of FMCW sweep, ...
% % number 32768 is added to the first sample of each sweep 
% header_index = find(I_rawdata_1 >= 32768);
% header_index_diff = diff(header_index);
% % This should return an empty matrix, meaning that no data is lost during the transmission
% find(header_index_diff ~= NTS) 
% 
% % remove sweep header 32768
% I_rawdata_1(header_index) = I_rawdata_1(header_index) - 32768;


%% Note:
% Before each data request session, the instruction must be sent to the radar
% even though no radar parameters need to be changed.  

% fft settings
sweep_length=512;
fft_interp_factor_range = 4;
fft_interp_factor_doppler = 1;

%radar cinfiguration properties
sweep_period = 1.0e-3;
f_bandwidth = 400e6;
f_carrier = 5.8e9;
% Perform max range/velocity calculations
min_range = 5.9667e-09 * 3e8;
min_range = 0.5;
max_range = ((3e8 * sweep_length / 4 / f_bandwidth) + min_range) / 2;
max_velocity = 3e8 / sweep_period / 4 / f_carrier;

samp_rate =1/sweep_period*NTS;

lightspeed = 3e8;

% Exmaple code structure:
%
% Radar device initialization  
%
% while loop start 
while(1)
    
    %
    % use miniradarpuetdata() to send an instruction to the
    % radar, regardless of whether the radar parameters need to be changed
    outlength = miniradarputdata(outdata, handles.endpoint2_no);
    %
    % use miniradargetdata() to request data from the device
    tic;
    [data,inlength] = miniradargetdata(handles.endpoint6_no,data_length);
    toc
    %
    % signal processing, plotting, etc.
    rawdata = double(data(2049:end));
    index = find(rawdata>=32768);
    rawdata(index) = rawdata(index) - 32768;
    %
    if (length(data) == data_length-2048)

        % Iterate through the two channels
        for channel = 1:2

            % Extract Signal Components
            N_avg = 5; %Averaging
            datastream = rawdata(index(1):index(1)+N_avg*NTS*4-1);
            channel_index = (channel - 1) * 2 + 1;
            aQ = data(channel_index:4:end);
            aI = data((channel_index+1):4:end);
            
            IMatrix = reshape(aI,NTS,N_avg);
            QMatrix = reshape(aQ,NTS,N_avg);
            I_rawdata = mean(IMatrix,2);
            Q_rawdata = mean(QMatrix,2);
            
            notchfreq = 1;
            if notchfreq >= samp_rate/2.5
                notchfreq = samp_rate/2.5;
            end
            F1 = 2*notchfreq/samp_rate;
            F2 = 2*samp_rate/2.1/samp_rate;
            F12 = [F1,F2];
            N = 8;
            [BF,AF] = butter(N,F12);
            I_rawdata = I_rawdata - mean(I_rawdata);
            sgn = filter(BF,AF,I_rawdata);
            
            FFT_size = 1024;
            sgn = sgn.*hamming(NTS); 
            
            fsignal1 = fft(sgn,FFT_size);
            fsignal = fsignal1(1:FFT_size/2+1);
            psdx = (1/FFT_size).*abs(fsignal).^2;
            psdx(2:end-1) = 2*psdx(2:end-1);
            psd = 10*log10(psdx+eps); % power spectral density                        
            Rng = linspace(0,samp_rate/2,FFT_size/2+1)*lightspeed*sweep_period/(2*f_bandwidth);
 
            %Begin RangeDoppler Specific
            Rawdata = rawdata(index(1):index(1)+PN*NTS*4-1);
            A = Rawdata(channel_index:4:end);
            
            B = reshape(A,NTS,PN);                   
            DOPPLER_FFT_SIZE = 128;
            RANGE_FFT_SIZE = 512;
            DOPP_FREQ = 1/sweep_period;
            
            B = bsxfun(@minus, B, mean(B));
            B = filter(BF,AF,B,[],1);
            
            C = fft(B,RANGE_FFT_SIZE,1);
            D = C(1:RANGE_FFT_SIZE/2,:);
            D = bsxfun(@minus, D, mean(D,2));
            
            notch_vr = 0.01;
            notch_doppler = 2*notch_vr/(lightspeed/f_carrier);                      
            stopfreq = notch_doppler;
            if stopfreq > DOPP_FREQ/3
                stopfreq = DOPP_FREQ/3.1;
            end
            passfreq = 1.5*stopfreq;
            ws = stopfreq/(DOPP_FREQ/2);
            wp = passfreq/(DOPP_FREQ/2);
            Rp = 2;
            Rs = 30;
            [N,Wn] = buttord(wp,ws,Rp,Rs);
            [num,den] = butter(N,Wn,'high'); % Highpass filter
            
            VrNotch = get(handles.VrNotchFilter,'Value');                   
            if VrNotch == 1
                D = filter(num,den,D,[],2); % Doppler Notch filter
            end

            E = abs(fftshift(fft(D,DOPPLER_FFT_SIZE,2),2)).^2/DOPPLER_FFT_SIZE;                   

            [RngIdx,DopplerIdx] = find(E==max(max(E)));
            surfX = linspace(-DOPP_FREQ/2,DOPP_FREQ/2,DOPPLER_FFT_SIZE)*(lightspeed)/f_carrier/2;
            surfY = linspace(0,samp_rate/2,RANGE_FFT_SIZE/2)*lightspeed*sweep_period/(2*f_bandwidth);
            RangeInfo = surfY(RngIdx(1));
            VeloInfo = surfX(DopplerIdx(1));                              
%             set(handles.PeakValue,'String',num2str(RangeInfo),'Foregroundcolor','blue');
%             set(handles.VeValue,'String',num2str(VeloInfo),'Foregroundcolor','blue');

            axes2 = axes;    
            cla(axes2,'reset');
            surface(surfX, surfY, E, 'EdgeColor', 'none');
            DopplerX = getappdata(handles.DopplerX,'DXlimit');
            DopplerY = getappdata(handles.DopplerY,'DYlimit');
            axis([-DopplerX DopplerX 0 DopplerY]);
            xlabel('Velocity(m/s)');
            ylabel('Range(m)');

            % Perform IQ Correction
%             miux = mean(aI);
%             miuy = mean(aQ);
%             I2_bar = mean((aI-miux).^2);
%             Q2_bar = mean((aQ-miuy).^2);
%             IQ_bar = mean((aI-miux).*(aQ-miuy));
%             D_bar = IQ_bar/I2_bar;
%             C_bar = sqrt(Q2_bar/I2_bar-D_bar^2);
%             d_ampImb = sqrt(C_bar^2+D_bar^2)-1;
%             phi = atan(D_bar/C_bar);
%             aI = aI - miux;
%             aQ = ((aQ - miuy)/(1+d_ampImb) - aI*sin(phi))/cos(phi);
%             chA = aI + 1i*aQ;

%             % Break down total sweep into individual sweeps
%             sweeps = reshape(chA, sweep_length, (length(chA) / sweep_length));
% 
%             % Background Subtraction
%             sweeps = bsxfun(@minus, sweeps,  sweeps(:,1)); 
% 
%             % FFT Range Processing
%             sweeps = bsxfun(@times, sweeps,  hamming(size(sweeps, 1))); % FFT Range Filtering
%             sweeps = fft(sweeps, [sweep_length * fft_interp_factor_range], 1) ./ size(sweeps,1);
% 
%             % Perform Range Compensation
%             range_int_size = size(sweeps,1) / 2;
%             axis_range = linspace(min_range, max_range, size(sweeps,1));
%             for range_bin = 1:range_int_size
%                 sweeps(range_bin,:) = sweeps(range_bin,:) .* (axis_range(range_bin).^(1/4));
%             end;
% 
%             % FFT Doppler Processing
%             sweeps = bsxfun(@minus, sweeps,  mean(sweeps, 2)); % DC Subtract Velocity
%             sweeps = bsxfun(@times, sweeps,  hamming(size(sweeps, 2))'); % FFT Velocity Filtering
%             sweeps = fft(sweeps, [sweep_length * fft_interp_factor_doppler], 2) ./ size(sweeps,2);
% 
%             notch_vr = 0.1;
%             notch_doppler = 2*notch_vr/3e8*f_carrier;
%             stopfreq = notch_doppler;
%             DOPP_FREQ = 1/sweep_period;
%             if stopfreq > DOPP_FREQ/3
%                 stopfreq = DOPP_FREQ/3.1;
%             end
%             passfreq = 1.5*stopfreq;
%             ws = stopfreq/(DOPP_FREQ/2);
%             wp = passfreq/(DOPP_FREQ/2);
%             Rp = 2;
%             Rs = 30;
%             [N,Wn] = buttord(wp,ws,Rp,Rs);
%             [num,den] = butter(N,Wn,'high'); % Highpass filter
%             VrNotch = 0;                   
%             if VrNotch == 1
%                 sweeps = filter(num,den,sweeps,[],2); % Doppler Notch filter
%             end
%    
%             % FFT-Shift so zero velocity is in the center
%             sweeps = fftshift(sweeps, 2);
%             
%             % Build the axis
%             axis_velocity = linspace(-max_velocity, max_velocity, size(sweeps,2));
% 
%             % Convert to ABS
%             sweeps = abs(sweeps).^2;  
% 
%             % Convert to log scale
%             sweeps = 10*log10(sweeps);
% 
%             % Adjust the dynamic range
% %             O1 = mean(max(sweeps(1:range_int_size,:))); % min range of values in img
% %             O2 = 0.0; %max(max(sweeps(1:range_int_size,:)));  % max range of values in img
% %             T1 = 0.0;  % min range of target value
% %             T2 = 30.0;  % max range of target value
% %             sweeps = (((sweeps - O1) * (T2 - T1)) / (O2 - O1)) + T1;
% 
%             % Determine maximum range bin
%             max_doppler_bins = max(sweeps,[],2);
%             [~, max_range_bin] = max(max_doppler_bins);
%             max_range_bins = max(sweeps,[],1);
%             [~, max_doppler_bin] = max(max_range_bins);
% 
%             % Fix plot handle to prevent the axis from shrinking
%             plot_h = subplot(1,2,channel);
%             plot_ax = get(plot_h, 'position');
%             set(plot_h, 'position', plot_ax);
% 
%             % Plot Figure        
%             imagesc(axis_velocity, axis_range, sweeps, [0 30]);
%             axis([0.2 max_velocity min_range max_range / 2]);
%             xlabel('Doppler Velocity (m/s)');
%             ylabel('Range (m
%             title(['Channel ' num2str(channel)]);
%             colorbar();
% 
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%             %settings
%             noisecancellation=1;
%             VrNotch = 1;
%             
%             B = reshape(aI,NTS,NP/2);                   
%             DOPPLER_FFT_SIZE = 128;
%             RANGE_FFT_SIZE = 512;
%             DOPP_FREQ = 1/sweep_period;
% 
%             if noisecancellation == 1
%                 B = bsxfun(@minus, B, B(:,1));
%             else
%                 B = bsxfun(@minus, B, mean(B));
%                 B = filter(BF,AF,B,[],1);
%             end
% 
%             C = fft(B,RANGE_FFT_SIZE,1);
%             D = C(1:RANGE_FFT_SIZE/2,:);
%             D = bsxfun(@minus, D, mean(D,2));
% 
%             notch_vr = 0+0.01;
%             notch_doppler = 2*notch_vr/(3e8/f_carrier);                      
%             stopfreq = notch_doppler;
%             if stopfreq > DOPP_FREQ/3
%                 stopfreq = DOPP_FREQ/3.1;
%             end
%             passfreq = 1.5*stopfreq;
%             ws = stopfreq/(DOPP_FREQ/2);
%             wp = passfreq/(DOPP_FREQ/2);
%             Rp = 2;
%             Rs = 30;
%             [N,Wn] = buttord(wp,ws,Rp,Rs);
%             [num,den] = butter(N,Wn,'high'); % Highpass filter
% 
%             VrNotch = 0;                   
%             if VrNotch == 1
%                 D = filter(num,den,D,[],2); % Doppler Notch filter
%             end
% 
%             E = abs(fftshift(fft(D,DOPPLER_FFT_SIZE,2),2)).^2/DOPPLER_FFT_SIZE;                   
%           
%             [RngIdx,DopplerIdx] = find(E==max(max(E)));
%             samp_rate = 1/sweep_period*NTS;
%             surfX = linspace(-DOPP_FREQ/2,DOPP_FREQ/2,DOPPLER_FFT_SIZE)*(3e8)/f_carrier/2;
%             surfY = linspace(0,samp_rate/2,RANGE_FFT_SIZE/2)*3e8*sweep_period/(2*f_bandwidth);
%             RangeInfo = surfY(RngIdx(1));
%             VeloInfo = surfX(DopplerIdx(1));                              
%           
% %             plot_a = subplot(1,2,channel);
% %             plot_ax = get(plot_a, 'position');
% %             set(plot_a, 'position', plot_ax);
% % 
% %             % Plot Figure        
% %             imagesc(axis_velocity, axis_range, E, [0 30]);
% %             axis([0.2 max_velocity min_range max_range / 2]);
% %             xlabel('Doppler Velocity (m/s)');
% %             ylabel('Range (m)');
% %             title(['Channel ' num2str(channel)]);
% %             colorbar();

        % End Channel Iteration    
        end;

        % Display the figure
        drawnow;

        % Check if the user want's to quit
%         if ishandle(radar_fig)
%             if get(radar_fig,'currentkey') == 'q'
%                 fclose(u);
%                 close radar_fig;
%             end;
%         end;
    else
        disp (length(data));    
    end;
% while loop end
end;

%near and far, static and moving, which waveform, then deep learning
